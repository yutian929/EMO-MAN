<launch>
    <!-- Environment Parameters -->
    <arg name="/semantic_map/venv" default="/usr/bin/python" doc="Python environment path for 3D dynamic semantic map generator, manager, guide"/>
    <arg name="/semantic_map/semantic_categories_json_path" default="$(find semantic_map_pkg)/scripts/semantic_categories.json"
                                                            doc="the path of semantic categories json file"/>
    <!-- Semantic Map Master Parameters -->
    <arg name="/semantic_map/master/topic_image_sub" default="/camera/color/image_raw" doc="subscription topic name of rgb image"/>
    <arg name="/semantic_map/master/topic_depth_sub" default="/camera/aligned_depth_to_color/image_raw" doc="subscription topic name of depth"/>
    <arg name="/semantic_map/master/service_update_prompt" default="/update_prompt" doc="service name of update detecting prompt(semantic categories)"/>
    <arg name="/semantic_map/master/camera_link_father" default="map" doc="the name of parent tf frame(global tf frame)"/>
    <arg name="/semantic_map/master/camera_link_child" default="camera_color_optical_frame" doc="the name of camera tf frame"/>
    <arg name="/semantic_map/master/timer_duration" default="0.1" doc="the time interval for publishing semantic objects"/>
    <arg name="/semantic_map/depth_repair/enable" default="true" doc="whether to enable deep repair"/>
    <!-- Semantic Map Generator Parameters -->
    <arg name="/semantic_map/generator/downsample_step" default="2" doc="downsampling rate of semantic point cloud"/>
    <arg name="/semantic_map/generator/topic_camera_info_sub" default="/camera/color/camera_info" doc="topic name of camera intrinsic parameters"/>
    <arg name="/semantic_map/generator/det_seg_mode" default="yoesam" doc="method selection for object detection and semantic segmentation, yoesam or gsam"/>
    <!-- Semantic Map Manager Parameters -->
    <arg name="/semantic_map/manager/db_path" default="$(env YANBOT_WS)/semantic_map.db" doc="the path of semantic map database"/>
    <arg name="/semantic_map/manager/renew_db" default="true" doc="whether to clear the semantic map database at startup"/>
    <arg name="/semantic_map/manager/last_seen_imgs_dir" default="$(env YANBOT_WS)/last_seen_imgs"
                                                         doc="storage path of annotated images corresponding to semantic objects"/>
    <arg name="/semantic_map/manager/topic_semantic_object_sub" default="/semantic_object" doc="subscription topic name of semantic object"/>
    <arg name="/semantic_map/manager/topic_semantic_map_pub" default="/semantic_map" doc="publish topic name of semantic map"/>
    <arg name="/semantic_map/manager/semantic_map_frame_id" default="map" doc="the name of tf frame used by semantic map"/>
    <arg name="/semantic_map/manager/topic_bbox_markers" default="/semantic_map_bbox" doc="topic name of semantic object bounding box"/>
    <arg name="/semantic_map/manager/bbox_colora" default="[0.0, 1.0, 0.0, 0.5]" doc="visualization parameters of semantic object bounding box"/>
    <arg name="/semantic_map/manager/bbox_line_width" default="0.01" doc="line width ofbounding box"/>
    <arg name="/semantic_map/manager/show_markers" default="true" doc="whether to show bounding box"/>
    <arg name="/semantic_map/manager/service_show" default="/semantic_map_show" doc="service name of show semantic map"/>
    <!-- Semantic Map Guide Parameters -->
    <arg name="/semantic_map/guide/clip_matcher_model" default="ViT-B/16" doc="the model name of clip matcher"/>
    <arg name="/semantic_map/guide/base_link_father" default="map" doc="the name of parent tf frame(global tf frame)"/>
    <arg name="/semantic_map/guide/base_link_child" default="camera_link" doc="the name of camera tf frame"/>
    <arg name="/semantic_map/guide/service_guide_server" default="semantic_map_guide" doc="service name of semantic map guide"/>
    
    <!-- Dependence: det&seg -->
    <arg name="/semantic_map/det_seg/yoesam_launch" default="$(find yolo_evsam_ros)/launch/yoesam_distributed.launch" 
                                                    doc="launch file path of yolo_evsam_ros"/>
    <arg name="/semantic_map/det_seg/gsam_launch" default="$(find grounding_sam_ros)/launch/gsam_distributed.launch"
                                                    doc="launch file path of grounding_sam_ros"/>
    <include file="$(arg /semantic_map/det_seg/yoesam_launch)" if="$(eval arg('/semantic_map/generator/det_seg_mode') == 'yoesam')"/>
    <include file="$(arg /semantic_map/det_seg/gsam_launch)" unless="$(eval arg('/semantic_map/generator/det_seg_mode') == 'yoesam')"/>
    <!-- Dependence: depth_repair -->
    <arg name="/semantic_map/depth_repair/launch" default="$(find depth_anything_ros)/launch/depth_repair.launch"
                                                  doc="launch file path of depth_anything_ros"/>
    <include file="$(arg /semantic_map/depth_repair/launch)">
        <arg name="enable_depth_repair" value="$(arg /semantic_map/depth_repair/enable)"/>
    </include>
    <!-- Semantic Map Master -->
    <node name="semantic_map_master_node" 
        pkg="semantic_map_pkg" 
        type="semantic_map_master_node.py"
        launch-prefix="$(arg /semantic_map/venv)"
        output="screen"
        respawn="true">
        <param name="semantic_categories_json_path" 
                type="str" 
                value="$(arg /semantic_map/semantic_categories_json_path)"/>
        <param name="topic_image_sub"      type="str"   value="$(arg /semantic_map/master/topic_image_sub)" />
        <param name="topic_depth_sub"      type="str"   value="$(arg /semantic_map/master/topic_depth_sub)" />
        <param name="service_update_prompt" type="str"  value="$(arg /semantic_map/master/service_update_prompt)" />
        <param name="camera_link_father" type="str" value="$(arg /semantic_map/master/camera_link_father)"/>
        <param name="camera_link_child" type="str" value="$(arg /semantic_map/master/camera_link_child)"/>
        <param name="timer_duration"      type="double" value="$(arg /semantic_map/master/timer_duration)" />
    </node>
   
    <!-- Semantic Map Generator -->
    <node name="semantic_map_generator_node" 
        pkg="semantic_map_pkg" 
        type="semantic_map_generator_distributed_node.py"
        launch-prefix="$(arg /semantic_map/venv)"
        output="screen"
        respawn="true">
        <param name="downsample_step"      type="int"   value="$(arg /semantic_map/generator/downsample_step)" />
        <param name="topic_camera_info_sub" type="str" value="$(arg /semantic_map/generator/topic_camera_info_sub)" />
        <param name="service_update_prompt" type="str"  value="$(arg /semantic_map/master/service_update_prompt)" />
        <param name="camera_link_father" type="str" value="$(arg /semantic_map/master/camera_link_father)"/>
        <param name="camera_link_child" type="str" value="$(arg /semantic_map/master/camera_link_child)"/>
        <param name="timer_duration"      type="double" value="$(arg /semantic_map/master/timer_duration)" />
    </node>
    
    <!-- Semantic Map Manager -->
    <node name="semantic_map_manager_node" 
        pkg="semantic_map_pkg" 
        type="semantic_map_manager_node.py"
        launch-prefix="$(arg /semantic_map/venv)"
        output="screen"
        respawn="true">
        <param name="db_path" type="str" value="$(arg /semantic_map/manager/db_path)"/>
        <param name="renew_db" type="bool" value="$(arg /semantic_map/manager/renew_db)"/>
        <param name="last_seen_imgs_dir" type="str" value="$(arg /semantic_map/manager/last_seen_imgs_dir)"/>
        <param name="topic_semantic_object_sub" type="str" value="$(arg /semantic_map/manager/topic_semantic_object_sub)"/>
        <param name="topic_semantic_map_pub" type="str" value="$(arg /semantic_map/manager/topic_semantic_map_pub)"/>
        <param name="semantic_map_frame_id" type="str" value="$(arg /semantic_map/manager/semantic_map_frame_id)"/>
        <param name="topic_bbox_markers" type="str" value="$(arg /semantic_map/manager/topic_bbox_markers)"/>
        <param name="bbox_colora" type="str" value="$(arg /semantic_map/manager/bbox_colora)"/>
        <param name="bbox_line_width" type="double" value="$(arg /semantic_map/manager/bbox_line_width)"/>
        <param name="show_markers" type="bool" value="$(arg /semantic_map/manager/show_markers)"/>
        <param name="service_show" type="str" value="$(arg /semantic_map/manager/service_show)"/>
    </node>

    <!-- Dependence: llm -->
    <include file="$(find llm_pkg)/launch/llm.launch"/>
    <!-- Dependence: vlm -->
    <include file="$(find vlm_pkg)/launch/vlm.launch"/>
    <!-- Semantic Map Guide -->
    <node name="semantic_map_guide_node" 
          pkg="semantic_map_pkg" 
          type="semantic_map_guide_node.py" 
          launch-prefix="$(arg /semantic_map/venv)"
          output="screen"
          respawn="true">
      <param name="semantic_categories_json_path" 
             type="str" 
             value="$(arg /semantic_map/semantic_categories_json_path)"/>
      <param name="db_path" type="str" value="$(arg /semantic_map/manager/db_path)"/>
      <param name="last_seen_imgs_dir" type="str" value="$(arg /semantic_map/manager/last_seen_imgs_dir)"/>
      <param name="clip_matcher_model" type="str" value="$(arg /semantic_map/guide/clip_matcher_model)"/>
      <param name="base_link_father" type="str" value="$(arg /semantic_map/guide/base_link_father)"/>
      <param name="base_link_child" type="str" value="$(arg /semantic_map/guide/base_link_child)"/>
      <param name="service_guide_server" type="str" value="$(arg /semantic_map/guide/service_guide_server)"/>
    </node>
</launch>
